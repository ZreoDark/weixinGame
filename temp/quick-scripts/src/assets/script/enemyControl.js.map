{"version":3,"sources":["assets/script/enemyControl.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAA4C;AAC5C,+CAA0C;AACpC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA0C,gCAAY;IAAtD;QAAA,qEA6DC;QA3DG,WAAK,GAAW,KAAK,CAAC;QACtB,wBAAwB;QACxB,iBAAW,GAAW,KAAK,CAAC;;IAyDhC,CAAC;IAxDG,6BAAM,GAAN;IAEA,CAAC;IAED,4BAAK,GAAL;QACI,gCAAgC;IACpC,CAAC;IACD,0BAAG,GAAH;QAAA,iBAuBC;QAtBG,SAAS;QACT,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,EAAC;YACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,EAAC,EAAE,CAAC,WAAW,EAAC,UAAC,GAAG,EAAC,GAAG;gBACtD,yCAAyC;gBACzC,aAAa;gBACb,sEAAsE;gBACtE,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;gBACjF,UAAU,CAAC;oBACP,IAAG,KAAI,CAAC,IAAI,EAAC;wBACT,QAAQ;wBACR,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;wBAC5D,MAAM;wBACN,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,QAAQ,EAAE,CAAC;wBACrE,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;qBACvB;gBACL,CAAC,EAAC,GAAG,CAAC,CAAA;YACV,CAAC,CAAC,CAAA;SACL;IAIL,CAAC;IACD,6BAAM,GAAN,UAAQ,EAAE;QACN,MAAM;QACN,IAAG,CAAC,IAAI,CAAC,KAAK,EAAC;YACX,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC;SAC3B;QACD,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,EAAC;YAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACL,CAAC;IACA,8BAA8B;IAC9B,uCAAgB,GAAhB,UAAiB,KAAK;QACnB,kBAAkB;QAClB,IAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAC;YACd,KAAK,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC,WAAW,CAAC;YAC/F,IAAG,KAAK,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC,WAAW,EAAC;gBAC7C,QAAQ;gBACR,KAAK,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAC,GAAG,EAAE,CAAC;gBACxC,YAAY;gBACZ,IAAG,IAAI,CAAC,IAAI,EAAC;oBACT,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;iBACvB;aACJ;SACJ;IACL,CAAC;IA3DgB,YAAY;QADhC,OAAO;OACa,YAAY,CA6DhC;IAAD,mBAAC;CA7DD,AA6DC,CA7DyC,EAAE,CAAC,SAAS,GA6DrD;kBA7DoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import PlayerControl from \"./playerControl\";\nimport ScoreControl from \"./scoreControl\";\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class EnemyControl extends cc.Component {\n\n    isDie:boolean = false;\n    // LIFE-CYCLE CALLBACKS:\n    isCollision:boolean = false;\n    onLoad () {\n        \n    }\n\n    start () {\n        // this.node.setSiblingIndex(2);\n    }\n    die(){//被子弹碰撞之后就会销毁\n        //加载爆炸图片 \n        if(this.node.y < 396){\n            this.isDie = true;\n            cc.loader.loadRes('image/imageAny',cc.SpriteAtlas,(err,res)=>{\n                //cc.loader.loadRes():动态加载resources文件里的资源\n                //sprite：精灵组建\n                // spriteFrame：sprite组件使用图像资源的一种方式，每个texture文件都会产生一个 SpriteFrame 的图像资源\n                this.node.getComponent(cc.Sprite).spriteFrame = res.getSpriteFrame('enemy0_die');\n                setTimeout(()=>{\n                    if(this.node){\n                        //攻击成功音效\n                        cc.find('Canvas/audio').getComponent(cc.AudioSource).play();\n                        //分数加1\n                        cc.find('Canvas/score/number').getComponent(ScoreControl).scoreAdd();\n                        this.node.destroy();\n                    }\n                },300)\n            })\n        }\n        \n        \n        \n    }\n    update (dt) {\n        //敌人移动\n        if(!this.isDie){\n            this.node.y -= 300 * dt;\n        }\n        if(this.node.y < -455 && this.node){\n            this.node.destroy();\n        }\n    }\n     //当碰撞系统检测到有碰撞产生时，将会以回调的方式通知使用者\n     onCollisionEnter(other){\n        //碰到敌人，先敌人销毁，再自己销毁\n        if(other.tag == 2){\n            other.getComponent(PlayerControl).isCollision = !other.getComponent(PlayerControl).isCollision;\n            if(other.getComponent(PlayerControl).isCollision){\n                //销毁我方飞机\n                other.getComponent(PlayerControl).die();\n                //销毁自己(敌方飞机)\n                if(this.node){\n                    this.node.destroy();\n                }\n            } \n        }\n    }\n    \n}\n"]}