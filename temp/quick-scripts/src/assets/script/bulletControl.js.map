{"version":3,"sources":["assets/script/bulletControl.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA0C;AAEpC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA2C,iCAAY;IAAvD;QAAA,qEA0CC;QAvCE,WAAK,GAAU,GAAG,CAAC;;IAuCtB,CAAC;IArCG,wBAAwB;IAExB,8BAAM,GAAN;IAEA,CAAC;IAED,6BAAK,GAAL;QACI,gCAAgC;IACpC,CAAC;IAED,8BAAM,GAAN,UAAQ,EAAE;QACF,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAC/B,WAAW;QACX,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,EAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACT,CAAC;IACD,8BAA8B;IAC9B,wCAAgB,GAAhB,UAAiB,KAAK;QAClB,kBAAkB;QAClB,IAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAC;YACd,KAAK,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,WAAW,CAAC;YAC5F,MAAM;YACP,IAAG,KAAK,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,WAAW,EAAC;gBAC5C,KAAK,CAAC,YAAY,CAAC,sBAAY,CAAC,CAAC,GAAG,EAAE,CAAC;aAC1C;SACJ;IACL,CAAC;IACD,OAAO;IACP,uCAAe,GAAf,UAAgB,KAAK,EAAE,IAAI;QACvB,MAAM;QACN,IAAG,IAAI,CAAC,IAAI,EAAC;YACT,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IAEL,CAAC;IArCF;QADC,QAAQ;gDACU;IAHD,aAAa;QADjC,OAAO;OACa,aAAa,CA0CjC;IAAD,oBAAC;CA1CD,AA0CC,CA1C0C,EAAE,CAAC,SAAS,GA0CtD;kBA1CoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import EnemyControl from \"./enemyControl\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class BulletControl extends cc.Component {\n\n   @property\n   speed:number = 850;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n       \n    }\n\n    start () {\n        // this.node.setSiblingIndex(2);\n    }\n\n    update (dt) {\n            this.node.y += this.speed * dt;\n            //子弹飞出屏幕要销毁\n            if(this.node.y > 850 && this.node){\n                this.node.destroy();\n            }\n    }\n    //当碰撞系统检测到有碰撞产生时，将会以回调的方式通知使用者\n    onCollisionEnter(other){\n        //碰到敌人，先敌人销毁，再自己销毁\n        if(other.tag == 0){\n            other.getComponent(EnemyControl).isCollision = !other.getComponent(EnemyControl).isCollision;\n             //销毁敌人\n            if(other.getComponent(EnemyControl).isCollision){\n                other.getComponent(EnemyControl).die();\n            }  \n        }\n    }\n    //碰撞结束后\n    onCollisionExit(other, self) {\n        //销毁自己\n        if(this.node){\n            this.node.destroy();\n        }\n        \n    }\n\n}\n"]}